一、总体目标分析:
1.总的目标是要设计一个类似qq一样的聊天程序。
2.服务器端界面：可以控制端口的开启与关闭，可以看到连接服务器的客户机一样详细信息，包括用户名、密码以及登录地址等。
3.服务器端与客户端通信：服务器端要能与客户端实现一对一的通信，还能实现一对多的“群聊”还要能实现“踢人”功能。
4.客户端包括登陆界面和聊天界面，在登陆界面需要先注册才能进行登录，聊天界面中，可以看到在线好友，可以实现客户端与客户端的一对一同信，也可以实现所有客户端之间的“群聊”，以及与服务器的通信。
5.可以传输文件以及图片。
二、过程分析：
在整个服务器端的设计中，主要分为四个类：
ServerUl.java
Server.java
ServerThread.java
User.java
(1)、ServerUl.java：
这个类主要是用来设计服务器端的界面。这个类中包括一些基本的界面属性，如窗体、输入框、按钮等。这里要说明的是含有一个整型的port属性，这里是要从输入框中获取，然后传入到Server.java类中
去绑定服务器；有一个Server类对象server,这个对象在点击“开启”按钮后创建；有三个JTexArea类对象，用于显示文字，由于在其他类中也可能用到，而且这些对象是唯一的，因此将他们申明为static类型，
便于在其他类中直接用类名来调用。
这个类的方法主要是两个监听器里面的方法。在这里，为按钮添加监听器使用了简写的形式。
//给按钮添加监听器，开启后马上获取端口号，开启相应服务器
jb_start.addActionListener(new ActionListener(){
public void actionPerformed(ActionEvent e){
//调用开启服务器的方法
startAction(e);
}
});
在开启按钮的监听事件中，首先要改变按钮中的文字，要实现既能开启也能关闭，然后就是开启对应端口的服务器，这个过程如下:
首先获取端口号:
this.port=Integer.parseInt(jt_port.getText());
然后将这个端口号通过创建Server对象的方式传入Server类中去开启对应端口的服务器
server = new Server(port);      //创建服务器类对象
server.createServer();          //调用相应的方法创建相应服务器
server.start();
在Server类是一个继承了线程的类，因此用到了启动线性的方法这里放于Server类中讲。到这一步，如果不出意外，一个对应端口的服务器就创建好了，只等着客户机的连接了。
在发送按钮的监听事件中，首先要判断服务器是否开启，只有服务器开启才能发送消息。若服务器开启，下一步就是要获取输入输入框中的字符串(发送消息当然要知道发送什么），得到字符串后就要调用方法了，
这一步困难了，发送消息方法在处理客户机连接的线程类中定义（考虑到每个客户端都要通信),怎么样才能调用这个方法能，注意到，每当有客户机连接上时，就创建一个线程对象去处理，而该线程对象就被放进
一个列队中（该列队在Server类中定义），因此只要将该队列定义为static类型即可解决此问题。
for(int i = 0;i<Server.stList.size();i++){     //给每个客户端都发送该消息
Server.stList.get(i).sendMessage(server_input);
}
（2）、Server.java:
这个类主要负责创建服务器、等待客户端的连接、创建处理客户端连接的线程对象、将该线程对象加入到队列中。
在创建服务器之前要先预存进10个用户名
static{
  for(int i=o;i<10;i++)
    Uers u=new Uers("poe"+i、
    System.out.println("生成用户名；
    userDB.put(u.getName(),u);
       }
    }
这是一段静态块代码，会在程序运行时先执行，且只执行一次，不需要对象来调用。
对与服务器的创建，其实很简单，只需要知道端口只用一个语句即可
public viod createSerever(){
   try {
        server=new ServerSocket(po
        Sytem.out.println("服务器"+
        }catch(IOException e){
        }
       }
然后就是等待客户端连接请求，当程序运行到这里的时候，系统就会阻塞       
        

