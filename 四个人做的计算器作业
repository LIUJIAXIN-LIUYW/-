小程序公共设置
{"pages":[
"page/index/index"
},
"window":{
"navigationBackgroundColor":
"#000",
"backgroundColor":"#000",
"navigattionBarBackgroundColor":
"#000"
},
"networkTimeout":{
"request":10000,
"connectSocket":10000,
"uploadFile":10000,
"downloadFile":10000
},
"debug":true

}
计算器页面结构
页面结构分为2个主要部分：显示区和键盘区
其中键盘区又分为功能键、数字键，及运算键，页面结构如下
<view class="calculator">
<view class="calculator-display">
<view class="calculator-display-text">
{{displayValue}}</view>
</view>
<view class="calulator-keypad">
<view class="input-keys">
<ciew class="function-keys"
catchtap="on TapFunction">
<template is="calculator-key"data="{{className:calculator-key"
data="{{className:"key-percent',
display:'%'}}"/>
</view>
/*sdf*/
<view class="dight-keys"
catchtap="on TapDight">
<template is="calculator-key"
data="{{className:'key-0',display:
'0'}}"/>
<template is="calculator-key"
data="{{className:'key-dot',display:'。'}}"/>
<template is="calculator-key"date="{
{className:'key-1',display:'1'}
}"/>
<template is="calculator-key"date="{
{className:'key-2',display:'2'}
}"/>
<template is="calculator-key"date="{
{className:'key-3',display:'3'}
}"/>
<template is="calculator-key"date="{
{className:'key-4',display:'4'}
}"/>
<template is="calculator-key"date="{
{className:'key-5',display:'5'}
}"/>
<template is="calculator-key"date="{
{className:'key-6',display:'6'}
}"/>
<template is="calculator-key"date="{
{className:'key-7',display:'7'}
}"/>
<template is="calculator-key"date="{
{className:'key-8',display:'8'}
}"/>
<template is="calculator-key"date="{
{className:'key-9',diaplay:'9'}
}"/>
</view>
<view class="operator-keys"
catchtap="onTapOperator">
<template is="calculator-key"date="{
{className:'key-divide',display:'/'}}"/>
<template is=
计算器样式表代码如下
@import “reset.wxss";

page {
 font: 100 14px 'Roboto';
 }
 
 .calculator {
   width：100%；
   height： 100vh；
   background: black;
   position: relative;
   box-shadow: 0px 0px 20px 0px
   display:flex;
   flex-direction: column;
   box-sizing: border-box;
   
   }
   
   .calculator-display {
   background: #1 c 1 9 1 c;
   flex: 1;
   
   }
   解决文本垂直居中问题
   .calculator-display-text {
     padding: 0 30px;
     font-size: 6em;
     color: white;
     text-align: right;
     
     }
     
     .calculator-keypad {
     display: flex;
     
     }
     .calculator .digit-keys {
     background: #e0e0e7;
     display: flex;
     flex-direction: row;
     flex-wrap: wrap-reverse;
     
     }
     
     .calculator-key-hover {
     box-shadow: inset 0px 0px
     25vw 0px rgba(0,0,0,0.25);
     
     }
     
     .calculator-key {
     display: block;
     width: 25vw;
     height: 25vw;
     line-height: 25vw;
     border-top: 1px solid #777;
     border-right: 1px solid #666;
     text-align: center;
     box-sizing: border-box;
     
     }
     
     .calculator .function-
     keys .calculator-key
     
     {
      font-size:2em;
      }
      
      .calcukator .digit-k
      eys .calculator-key
      {
       font-size: 2.25em;
       
       }
       
       .calculator .digit-keys .key-0 {
        width: 50vw;
        text-align: left;
        padding-left: 9vw;
        
        }
        
        .calculator .digit-keys .key-dot {
        padding-top: 1em;
        font-size: 0.75em;
        
        }
        
        .calculator .operator-
        keys .calculator-key
        
        {
        
        color: white;
        border-right: 0;
        font-size: 3em;
        
        }
        
        .calculator .function-keys {
         background: linear-gradient(to
         bottom,rgba(202,202,204,1)
         0%,rgba(196,194,204,1) 100%);
         }
         
         .calculator .operator-keys {
          background: linear-gradient(to
          bottom,rgba(252,156,23,1) 100%);
          
          }
          
          .calculator .operator-kes {
          background: linear-gradient(to
          bottom,rgba(252,156,23,1) 0%,
          rgba(247,126,27,1) 100%);
          
          }
          
          .input-keys {
           width: 75%;
           
           }
           
           .operator-keys {
            width: 25%;
            
            }
计算器页面逻辑处理Page({date:
{value:null,//上次计算后的结果，null表示没有上次计算的结果
displayValue:'0',//显示数值
waitingForOperand:false//前一按键是否为计算符号},
onLand:functoin(options){
this.calculatorOperations={
'key-divide':(prevValue,nextValue)=>
prevValue/nextValue,'key-multiply':(prevValue,nextValue)=>
prevValue*nextValue,'key-add':(prevValue,nextValue)=>
prevValue+nextValue,'key-subtract':(prevValue,nextValue)=>
prevValue-nextValue,'key-equals':(prevValue,nextValue)=>
nextValue
}
},/*AC操作，一下回到解放前*/
clearAll(){
this.setDate({
value:null,displayValue:'0',
opterator:null,waitingForOperand:
false
})
},/*仅清空当前显示的输入值*/
clearDisplay(){
this.setDate({
displayValue:'0'
})
},
onTapFunction:
functoin(event){
const key=
event.target.dataset.key;
switch(key){
case'key-clear':
if
(this.data.displayValue!=='0')
{
this.clearDisplay();
}else{
this.clearAll();
}
break;
