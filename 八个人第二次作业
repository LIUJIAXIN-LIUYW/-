计算器需求
编写目的
在程序设计中，通过设计，编制，调试一个模拟计算器的程序，加深对语法及语义分析的理解，
并实现对命令语句的灵活应用。在程序设计中，可以用两种方法解决问题，
一是传统的结构化程序设计方法
二是先进的面向对象的程序设计方法。
而在面向对象程序设计中，关键是将问题域中的实体抽取出来，作为C++程序中的类
而属性与行为的两类要素通常是必不可少的，设置还考虑类必须满足的约束。
项目背景
计算器是日常生活中十分便捷有效的工具，如能实现加、减、乘、除、开方、求倒数等简单运算的工具。
要实现计算功能，可以用VC++的知识编写程序来解决此问题。
该计算器大大的降低了数字计算的难度及提高了计算的准确度和精确度。
该计算器使用非常简单和方便，
对广大中小学生的学习有巨大帮助作用，
也对在职人员的工作有点帮助作用
开发软件名称：多功能计算器系统
用户：各个领域
在课程设计中，系统开发平台为WindowsXP
程序设计设计语言采用VisualC++6.0
在程序设计中
采用了结构化与面向对象两种解决问题的方法。
3.功能需求
功能划分
本软件用于计算机Windows 2000/XP以上版本的用户的使用，这次课程设计一般是实现简单计算器的功能。
要程序能实现：加，减，乘，除，开方，倒数等运算功能；还要实现数据的输入，输出，计算，显示及程序的退出等功能。
另外还可以实现多种科学计算的功能，如:三角函数的计算，弧度与角度间的转换，对数指数的计算等等。
功能描述
计算器的设计按软件工程的方法进行，系统具有良好的界面；必要的交互信息；简约美观的效果。
使用人员能快捷简单地进行操作。
即可单机按钮进行操作，也可直接通过键盘直接输入。
及时准确地获得需要的计算结果，充分降低了数字计算的难度和节约了时间，对人们的生活有一定的帮助。
包含的功能有：加、减、乘、除运算，开方、求导数等功能。
计算器上数字0-9为一个控件数组，加、减、乘、除为一个控件数组，其余为单一的控件。
给对话框添加菜单。
制定高级按钮控件，该按钮具有不规则的形状，可以根据用户的鼠标的位置和单机状态的不同，显示不同的颜色。
制定高级编辑控件，该编辑控件可指定文本文字的字体和颜色。
输入的原始数据、运算中间数据和结果都显示在窗口顶部的同一个标签中。
实现对话框的扩展功能。
计算功能基本上是用系统内部函数。
程序可以能自动判断输入数据的正确性，保证不出现多于一个小数点、以0开头等不正常现象。
“CE”按钮可以清除所有已输入的数据从头计算。
功能模块的实现；
（1）首先，添加一个高级编辑控件类，在此类的基础上实现高级的按钮控件。在此类中对于所有的对于按钮的绘制工作都是在Drawltem函数中完成的，
实现不同的按钮对鼠标不同的位置和动作改变不同的颜色并按钮的客户区域变成一个椭圆。
（2）其次，添加一个高级编辑控件类，在此类的基础上实现高级编辑控件。在OnDisplay函数中设置编辑框的显示文本，再调用OnDraw函数将其显示出来，
并用指定颜色绘制显示文本。
（3）最后，实现主对话框界面功能，主要是加载菜单资源和对话框扩展功能的实现在CCalculatorDlg；
4.性能需求
时间特性
用户提交查询时，得到返回结果的延时不得超过5秒；
提交数据录入时，得到结果的延时不得超过5秒。
系统的性能包括内容较多，在本系统中主要约定了作业的响应时间要求。
作业可以定义为“一个交易是当一个单一角色跨越系统边界触发一个事件并执行一定数量的处理和数据库访问，它将影响架构中的所有服务器层”。
作业响应时间指完成目标系统中的交互或批量处理所需的相应时间。
根据业务处理类型的不同，可以把作业划分为两类：交互类业务、查询类业务，分别给出响应时间要求的参考值，包括峰值影响时间、平均影响时间。
具体要求指标如下：
交互作业平均影响时间：1-3（秒）
交互作业峰值影响时间：5-10（秒)
简单查询平均影响时间：1-3（秒）
复杂查询平均影响时间：15-40（秒）
5.运行需求
5.1用户界面
在用户界面部分，根据需求分析的结果，用户需要一个简洁大方直观的界面。在界面设计上，应做到简单明了，易于操作，并且要注意到界面的布局，应突出的显示重要以及出错信息。外观也要做到合理化，
考虑到用户多对WINDOW风格较熟悉，应尽量向这一方向靠拢。在语言设计上，已决定使用MS VISUAL C++ 进行编程，在界面可使用 C++ BUILDER所提供的可视化组件，向 WINDOWS风格靠近。其中服务器
程序界面要做到操作简单，易于管理。在设计上采用下拉式菜单方式，在出错显示上可调用 C++ Builder库中的错误提示函数。
总的来说，系统的用户界面应做到可靠性、简单性、易学习和使用。
5.2硬件接口
在输入方面，对于键盘、鼠标的输入，可用c++的标准输入/输出，对输入进行处理。
在输出方面，打印机的连接及使用，也可用c++的标准输入/输出对其进行处理。在网络传输部分，在网络硬件部分，为了实现高速传输，将使用高速ATM.
5.3故障处理
小型故障：由软件逻辑错误引起，执行事务撤销，恢复到事物起点。
错误处理
程序在运行时主要会出现一种错误：由于输入信息，或无法满足要求时产生的错误，称为软错误。不可预见的操作系统错误不处理。
